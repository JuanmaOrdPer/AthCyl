# Generated by Django 4.2.7 on 2025-05-12 19:52

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_trainings', models.IntegerField(default=0)),
                ('total_distance', models.FloatField(default=0, help_text='Distancia total en kilómetros')),
                ('total_duration', models.DurationField(default=datetime.timedelta(0))),
                ('total_calories', models.IntegerField(default=0)),
                ('avg_distance_per_training', models.FloatField(default=0, help_text='Distancia promedio por entrenamiento en km')),
                ('avg_duration_per_training', models.DurationField(default=datetime.timedelta(0))),
                ('avg_speed', models.FloatField(default=0, help_text='Velocidad promedio en km/h')),
                ('avg_heart_rate', models.FloatField(default=0, help_text='Ritmo cardíaco promedio')),
                ('longest_distance', models.FloatField(default=0, help_text='Distancia más larga en km')),
                ('longest_duration', models.DurationField(default=datetime.timedelta(0))),
                ('highest_speed', models.FloatField(default=0, help_text='Velocidad más alta en km/h')),
                ('highest_elevation_gain', models.FloatField(default=0, help_text='Mayor ganancia de elevación en metros')),
                ('first_training_date', models.DateField(blank=True, null=True)),
                ('last_training_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='ActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('yearly', 'Anual')], max_length=10)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField(blank=True, null=True)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('training_count', models.IntegerField(default=0)),
                ('total_distance', models.FloatField(default=0, help_text='Distancia total en kilómetros')),
                ('total_duration', models.DurationField(default=datetime.timedelta(0))),
                ('total_calories', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_summaries', to='users.user')),
            ],
            options={
                'ordering': ['-year', '-month', '-week', '-day'],
                'unique_together': {('user', 'period_type', 'year', 'month', 'week', 'day')},
            },
        ),
    ]
