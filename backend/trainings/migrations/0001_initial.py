# Generated by Django 4.2.7 on 2025-05-12 19:52

from django.db import migrations, models
import django.db.models.deletion
import trainings.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('activity_type', models.CharField(choices=[('running', 'Correr'), ('cycling', 'Ciclismo'), ('swimming', 'Natación'), ('walking', 'Caminar'), ('hiking', 'Senderismo'), ('other', 'Otro')], default='running', max_length=20)),
                ('gpx_file', models.FileField(blank=True, null=True, upload_to=trainings.models.gpx_file_path)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration', models.DurationField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, help_text='Distancia en kilómetros', null=True)),
                ('avg_speed', models.FloatField(blank=True, help_text='Velocidad promedio en km/h', null=True)),
                ('max_speed', models.FloatField(blank=True, help_text='Velocidad máxima en km/h', null=True)),
                ('avg_heart_rate', models.FloatField(blank=True, help_text='Ritmo cardíaco promedio', null=True)),
                ('max_heart_rate', models.FloatField(blank=True, help_text='Ritmo cardíaco máximo', null=True)),
                ('elevation_gain', models.FloatField(blank=True, help_text='Ganancia de elevación en metros', null=True)),
                ('calories', models.IntegerField(blank=True, help_text='Calorías quemadas', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainings', to='users.user')),
            ],
            options={
                'ordering': ['-date', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TrackPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_points', to='trainings.training')),
            ],
            options={
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('goal_type', models.CharField(choices=[('distance', 'Distancia'), ('duration', 'Duración'), ('frequency', 'Frecuencia'), ('speed', 'Velocidad'), ('other', 'Otro')], max_length=20)),
                ('target_value', models.FloatField(help_text='Valor objetivo (km, minutos, etc.)')),
                ('period', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('yearly', 'Anual'), ('custom', 'Personalizado')], default='weekly', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='users.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
